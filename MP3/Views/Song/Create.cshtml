@model MP3.Models.Songs

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Songs</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Info)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Info)
            @Html.ValidationMessageFor(model => model.Info)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CountryId, "Country")
        </div>
        <div class="editor-field">
            @Html.DropDownList("CountryId", String.Empty)
            @Html.ValidationMessageFor(model => model.CountryId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MusicFile)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MusicFile)
            @Html.ValidationMessageFor(model => model.MusicFile)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.VideoFile)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.VideoFile)
            @Html.ValidationMessageFor(model => model.VideoFile)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Image)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Image)
            @Html.ValidationMessageFor(model => model.Image)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Quality)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Quality)
            @Html.ValidationMessageFor(model => model.Quality)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.View)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.View)
            @Html.ValidationMessageFor(model => model.View)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Download)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Download)
            @Html.ValidationMessageFor(model => model.Download)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CreatedTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CreatedTime)
            @Html.ValidationMessageFor(model => model.CreatedTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LastUpdate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastUpdate)
            @Html.ValidationMessageFor(model => model.LastUpdate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StaffPickedTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StaffPickedTime)
            @Html.ValidationMessageFor(model => model.StaffPickedTime)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
